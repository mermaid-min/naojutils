#! /usr/bin/env python
#
"""
USAGE: focas_ifu_reconstruct_image right.fits left.fits -o output.fits [options]

    right.fits: right image file name (smaller file number)
    left.fits: left image file name (larger file number)
    output_fits: output file name

"""
import sys
import argparse

from naoj.focas.reconstruct_image import reconstruct_image, version


def main(options, args):

    # read slit positions from region file
    #regdata = read_region_file(options.regionfile)

    # bias subtract, combine and extract regions
    hdulst = reconstruct_image(args[0], args[1],
                               template_pfx=options.template_pfx,
                               regionfile=options.regionfile,
                               flatfile=options.flatfile,
                               shift_flg=options.shift_flg,
                               smooth_flg=options.smooth_flg)

    # Writing the output fits file
    hdulst.writeto(options.outputfile, overwrite=True)

if __name__ == '__main__':
    # Parse command line options with optparse module
    usage = "usage: %prog [options] ch1.fits ch2.fits"
    parser = argparse.ArgumentParser(description='This is the script for'
                                     ' making a reconstructed IFU image.')

    parser.add_argument("-o", "--outputfile", dest="outputfile", metavar="NAME",
                        default='output.fits',
                        help="Specify output file name")
    parser.add_argument("-r", "--regionfile", dest="regionfile", metavar="NAME",
                        default=None,
                        help="Specify region file name")
    parser.add_argument("-f", "--flatfile", dest="flatfile", metavar="NAME",
                        default=None,
                        help="Specify flat file name")
    parser.add_argument("-t", "--template_pfx", dest="template_pfx", metavar="NAME",
                        default='bias_template',
                        help="Specify bias template prefix")
    parser.add_argument("--smooth", dest="smooth_flg", default=False,
                        action="store_true",
                        help="Do smoothing on reconstructed IFU image (default OFF)")
    parser.add_argument("--noshift", dest="shift_flg", default=True,
                        action="store_false",
                        help="Don't shift on reconstructed IFU image (default ON)")
    (options, args) = parser.parse_known_args(sys.argv[1:])

    main(options, args)
